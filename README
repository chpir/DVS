script/generate model Project name:string description:text
script/generate model Database name:string description:text project_id:integer site_variable:string
script/generate model Table name:string database_id:integer table_type_id:integer description:text filename:string
script/generate model TableType name:string description:text
### right now, just two table types for informational purposes only: source and derived
script/generate scaffold Variable name:string table_id:integer variable_type_id:integer identifier:boolean
script/generate model VariableType name:string description:text rule:text
script/generate model Rule name:string description:text tracking:integer rule:text rule_variable:string
script/generate model MemberVariable rule_id:integer variable_id:integer member_variable_type_id:integer
script/generate model MemberVariableType name:string description:text
### three types of member variables: identifiers, informers, and validatee
### limit to one validatee per rule for the time being.
script/generate model Exception rule_id:integer rule_type:string note:text
### exceptions should automatically ask for values for identifiers and validatees
script/generate model ExceptionValue exception_id:integer variable_id:integer value:text
script/generate model Run rule_id:integer dataset:string number_invalid:integer


automatic features for stata scripting:
1) prepends each rule with "clear" and "set more off"
2) outsheets identifiers, informers, validate, and rule_variable 
3) replacing referenced variables and table filenames by the correct name

expectations of stata scripting:
1) user will take care of opening 
2) user will generate rule_variable as a byte, leave it empty for valid fields, and label it with something appropriate.
3) at the end of the rule running, all the variables needed for outsheeting will be in the database
4) user will reference table filenames and variable names with tags <<variable:12>> or <<table:42>> in the rule.